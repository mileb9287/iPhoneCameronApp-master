//
//  ProgressBarDraw.swift
//  ProgressBarFun
//
//  Created by Boris Miler on 2017-11-19.
//  Copyright Â© 2017 .... All rights reserved.
//
//  Generated by PaintCode
//  http://www.paintcodeapp.com
//
//  This code was generated by Trial version of PaintCode, therefore cannot be used for commercial purposes.
//



import UIKit

public class ProgressBarDraw : NSObject {

    //// Drawing Methods

    @objc dynamic public class func drawProgressBar(frame: CGRect = CGRect(x: 0, y: 0, width: 395, height: 43), progress: CGFloat = 108) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        // This non-generic function dramatically improves compilation times of complex expressions.
        func fastFloor(_ x: CGFloat) -> CGFloat { return floor(x) }

        //// Color Declarations
        let color = UIColor(red: 0.004, green: 0.153, blue: 0.110, alpha: 1.000)

        //// Image Declarations
        let squareFillSegment3 = UIImage(named: "squareFillSegment3.png")!

        //// Progress Border Drawing
        let progressBorderPath = UIBezierPath(roundedRect: CGRect(x: frame.minX, y: frame.minY, width: fastFloor((frame.width) * 1.00000 + 0.5), height: 43), cornerRadius: 15)
        color.setStroke()
        progressBorderPath.lineWidth = 1
        progressBorderPath.stroke()


        //// Progress Active Drawing
        let progressActiveRect = CGRect(x: 0, y: 0, width: progress, height: 43)
        let progressActivePath = UIBezierPath(roundedRect: progressActiveRect, cornerRadius: 15)
        context.saveGState()
        progressActivePath.addClip()
        context.scaleBy(x: 1, y: -1)
        context.draw(squareFillSegment3.cgImage!, in: CGRect(x: progressActiveRect.minX, y: -progressActiveRect.minY, width: squareFillSegment3.size.width, height: squareFillSegment3.size.height), byTiling: true)
        context.restoreGState()
        color.setStroke()
        progressActivePath.lineWidth = 1
        progressActivePath.stroke()
    }

}
